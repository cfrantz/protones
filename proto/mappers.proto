syntax = "proto3";
package proto;
import "proto/apu.proto";

message MMC1 {
    uint32 shift_register = 1;
    uint32 control = 2;
    uint32 prg_mode = 3;
    uint32 chr_mode = 4;
    uint32 prg_bank = 5;
    uint32 chr_bank0 = 6;
    uint32 chr_bank1 = 7;

    repeated uint32 prg_offset = 8;
    repeated uint32 chr_offset = 9;
}

message XXROM {
    uint32 prg_banks = 1;
    uint32 prg_bank1 = 2;
    uint32 prg_bank2 = 3;
}

message CNROM {
    uint32 chr_banks = 1;
    uint32 chr_bank1 = 2;
}

message MMC3 {
    bool irqen = 1;
    uint32 register = 2;
    uint32 reload = 3;
    uint32 counter = 4;
    uint32 prg_mode = 5;
    uint32 chr_mode = 6;
    repeated uint32 registers = 7;
    repeated uint32 prg_offset = 8;
    repeated uint32 chr_offset = 9;
}

message MMC5 {
    uint32 prg_banks = 1;
    uint32 prg_mode = 2;
    uint32 chr_mode = 3;
    repeated uint32 prg_ram_protect = 4;
    uint32 ext_ram_mode = 5;
    uint32 nt_map = 6;
    uint32 fill_tile = 7;
    uint32 fill_color = 8;
    repeated uint32 prg_bank = 9;
    repeated uint32 chr_bank = 10;
    uint32 chr_upper = 11;
    uint32 vsplit_mode = 12;
    uint32 vsplit_scroll = 13;
    uint32 vsplit_bank = 14;
    uint32 irq_scanline = 15;
    uint32 irq_status = 16;
    repeated uint32 multiplier = 17;
    bytes ext_ram = 18;
    uint32 apu_divider = 19;
    uint32 cycle = 20;
    repeated APUPulse pulse = 21;
}

message Mapper {
    int32 mapper = 1000000;
    bytes wram = 1000001;
    oneof hardware {
        MMC1 mmc1 = 1;
        XXROM unrom = 2;
        CNROM cnrom = 3;
        MMC3 mmc3 = 4;
        MMC5 mmc5 = 5;
        XXROM axrom = 7;
    }
}
